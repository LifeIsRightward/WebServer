/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-07 18:59:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javabean.*;
import java.sql.*;

public final class tcupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Project/dbconn.jsp", Long.valueOf(1717609901351L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javabean");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");

	Connection conn = null;
	String url = "jdbc:mysql://127.0.0.1:3306/test";
	String user = "root";
	String password = "1234";
	Class.forName("com.mysql.cj.jdbc.Driver");
	conn = DriverManager.getConnection(url, user, password);

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('	');

		String id = request.getParameter("id");
		//그냥 혹시 몰라서 아이디 넘겨준거임 ㅇㅇ
		String num = request.getParameter("num");
		String writer = id;
		String title = "";
		String content = "";
		String created ="";
		
		ResultSet rs = null;
		Statement stmt = null;
	
		try{
			String sql = "select * from board where num=" + num;
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			
			while(rs.next()){
				writer = rs.getString("writer");
				title = rs.getString("title");
				content = rs.getString("content");
				int hitcount = rs.getInt("hitcount");
				created = rs.getString("created");
			}
		}catch(SQLException ex){
			out.println("person 테이블 호출이 실패했습니다. <br>");
			out.println("SQLException: " + ex.getMessage());
		}finally{
			if(rs != null){ rs.close();}
			if(stmt != null){stmt.close();}
			if(conn != null){conn.close();}
		}
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<form id=\"myForm\" name=\"boardform\" method=\"post\" action=\"tcprocess.jsp\">\r\n");
      out.write("	   	<input type=\"hidden\" name=\"num\" value = \"");
      out.print(num);
      out.write("\">\r\n");
      out.write("	   	<table>\r\n");
      out.write("	   		<tr>\r\n");
      out.write("				<th colspan=\"2\" style=\"background: yellow\">수정하기</th>\r\n");
      out.write("			</tr>\r\n");
      out.write("	   		<tr>\r\n");
      out.write("	   			<td>작성자: </td>\r\n");
      out.write("	   			<td>\r\n");
      out.write("	   				<input type=\"text\" name=\"writer\" value = \"");
      out.print(writer);
      out.write("\" readonly>\r\n");
      out.write("	   			</td>\r\n");
      out.write("	   			</tr>\r\n");
      out.write("	   			<tr>\r\n");
      out.write("	   				<td>제목: </td>\r\n");
      out.write("	   				<td><input type=\"text\" name=\"title\" value=\"");
      out.print(title);
      out.write("\"></td>\r\n");
      out.write("	   			</tr>\r\n");
      out.write("	   			<tr>\r\n");
      out.write("	   				<td>글 본문 </td>\r\n");
      out.write("	   				<td><input type=\"text\" name=\"content\" value=\"");
      out.print(content);
      out.write("\"></td>\r\n");
      out.write("	   			</tr>\r\n");
      out.write("	   			<tr>\r\n");
      out.write("	   				<td>게시 시간 </td>\r\n");
      out.write("	   				<td><input type=\"text\" name=\"created\" value=\"");
      out.print(created);
      out.write("\" readonly></td>\r\n");
      out.write("	   			</tr>\r\n");
      out.write("	   			<tr>\r\n");
      out.write("	   				<td colspan=\"2\">	   		\r\n");
      out.write("	   				<input type = \"submit\" value=\"update\" name=\"separation\">\r\n");
      out.write("	   				<input type = \"reset\" value=\"취소\" onClick=\"location.href='tcshow.jsp?id=");
      out.print(id);
      out.write("&num=");
      out.print(num);
      out.write("'\">\r\n");
      out.write("	   				<input type = \"button\" value=\"목록보기\" onClick=\"location.href='tripcommunity.jsp?id=");
      out.print(id);
      out.write("'\">\r\n");
      out.write("	   			</td>\r\n");
      out.write("	   		</tr>\r\n");
      out.write("	   	</table>\r\n");
      out.write("	   </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
