/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-08 19:29:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class nationalinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>동아시아 국가 여행 정보</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/nationalinfo.css\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

    	String uid = request.getParameter("id");
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <header>\r\n");
      out.write("        <h1><a href=\"index.jsp?id=");
      out.print(uid);
      out.write("\">CT: Culture&Trip</a></h1>\r\n");
      out.write("        <nav>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"nationalinfo.jsp?id=");
      out.print(uid);
      out.write("\">나라 소개</a></li>\r\n");
      out.write("                <li><a href=\"#\">여행 성향 분석</a></li>\r\n");
      out.write("                <li><a href=\"tripcommunity.jsp?id=");
      out.print(uid);
      out.write("\">여행 후기 게시판</a></li>\r\n");
      out.write("                <li><a href=\"profile.jsp?id=");
      out.print(uid);
      out.write("\">프로필</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <h1 class=\"introduce\">동아시아 국가 소재별 문화 정보</h1>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/Korea/Korea2.png');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>대한민국</h2>\r\n");
      out.write("                    <p>한국은 역동적인 도시와 아름다운 자연경관을 자랑하는 나라입니다.</p>\r\n");
      out.write("                    <a href=\"Koreashow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/NKorea/NorthKorea.jpg');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>북한</h2>\r\n");
      out.write("                    <p>북한은 고유의 문화와 역사적인 유적지로 유명합니다.</p>\r\n");
      out.write("                    <a href=\"NKoreashow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/China/China2.png');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>중국</h2>\r\n");
      out.write("                    <p>중국은 광대한 영토와 풍부한 문화유산을 보유하고 있습니다.</p>\r\n");
      out.write("                    <a href=\"Chinashow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/Japan/Japan.png');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>일본</h2>\r\n");
      out.write("                    <p>일본은 독특한 문화와 첨단 기술로 유명한 나라입니다.</p>\r\n");
      out.write("                    <a href=\"Japanshow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/Taiwan/Taiwan.jpg');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>대만</h2>\r\n");
      out.write("                    <p>대만은 아름다운 자연경관과 맛있는 음식으로 유명합니다.</p>\r\n");
      out.write("                    <a href=\"Taiwanshow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"country\" style=\"background-image: url('./assets/NationInfo/Mongolia/Mongolia.png');\">\r\n");
      out.write("            <div class=\"overlay\">\r\n");
      out.write("                <div>\r\n");
      out.write("                    <h2>몽골</h2>\r\n");
      out.write("                    <p>몽골은 광활한 초원과 전통 유목 문화를 자랑합니다.</p>\r\n");
      out.write("                    <a href=\"Mongoliashow.jsp\">자세히 보기</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const countries = document.querySelectorAll('.country');\r\n");
      out.write("            const observer = new IntersectionObserver(entries => {\r\n");
      out.write("                entries.forEach(entry => {\r\n");
      out.write("                    if (entry.isIntersecting) {\r\n");
      out.write("                        entry.target.classList.add('visible');\r\n");
      out.write("                        observer.unobserve(entry.target);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }, {\r\n");
      out.write("                threshold: 0.1\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            countries.forEach(country => {\r\n");
      out.write("                observer.observe(country);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
